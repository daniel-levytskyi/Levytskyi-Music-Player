import tkinter as tk
from tkinter import filedialog
from mutagen.mp3 import MP3
import pygame
import os

root = tk.Tk()
root.geometry("500x400")
root.title("Levytskyi's Music Player")
pygame.mixer.init()

is_paused = True
song_length = 0
current_pos = 0
filename = ""

song_title = tk.Label(root, text ="Now Playing: None")
song_title.pack()

def format_time(seconds):
    minutes = seconds // 60
    secs = seconds % 60
    return f"{minutes}:{secs:02}"


def choose_file():
    global filename, song_length, current_pos, is_paused
    filename = filedialog.askopenfilename(initialdir='/media')
    if filename:
        pygame.mixer.music.load(filename)
        pygame.mixer.music.play()
        song_title.config(text="Now Playing: " + os.path.basename(filename))
        audio = MP3(filename)
        song_length = int(audio.info.length)
        time_slider.config(to=song_length)
        is_paused = False
        current_pos = 0
        update_slider()

def pause_file():
    global is_paused
    pygame.mixer.music.pause()
    is_paused = True

def unpause_file():
    global is_paused
    pygame.mixer.music.unpause()
    is_paused = False


choose_button = tk.Button(root,text="choose file", command=choose_file)
choose_button.pack()

pause_button = tk.Button(root, text="pause the music", command=pause_file)
pause_button.pack()

unpause_button = tk.Button(root, text="unpause", command=unpause_file)
unpause_button.pack()

def preview_slider(event):
    global is_paused
    pygame.mixer.music.pause()
    value = time_slider.get()
    time_label.config(text=f"{format_time(value)} / {format_time(song_length)}")


def seek_music(value):
    global current_pos, is_paused
    pygame.mixer.music.unpause()
    current_pos = time_slider.get()
    pygame.mixer.music.play(start=current_pos)
    is_paused = False

def update_slider():
    global current_pos
    if pygame.mixer.music.get_busy() and not is_paused:
        current_pos += 1
        time_slider.set(current_pos)
        time_label.config(text=f"{format_time(current_pos)} / {format_time(song_length)}")
    root.after(1000, update_slider)

time_slider = tk.Scale(root, from_=0, to=100, orient="horizontal", command=seek_music, length=400, showvalue=0)
time_slider.pack()

time_slider.bind("<B1-Motion>", preview_slider)
time_slider.bind("<ButtonRelease-1>", seek_music)

time_label=tk.Label(root, text="00:00 / 00:00")
time_label.pack()

exit_button = tk.Button(root, text="exit", command=root.quit)
exit_button.pack()

root.mainloop()
